{"version":3,"sources":["redux/modules/appState/index.js","redux/modules/gameState/index.js","redux/reducer.js","services/mongoService.js","redux/modules/appState/middleware.js","redux/modules/gameState/middleware.js","redux/middleware.js","redux/index.js","logo.svg","App.js","provider/LoadingProvider.js","index.js"],"names":["GET_URL_PARAMS","ADD_ROLE","initialState","token","user","role","GET_GAME_STATE","data","combineReducers","app","state","action","type","payload","start","userID","gameState","useApiParams","request","url","a","method","body","headers","JSON","stringify","fetch","response","json","console","log","postUserData","getGameData","appMiddleware","store","next","then","res","dispatch","gameStateMiddleware","setInterval","middleware","thunk","applyMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","App","props","useSelector","className","src","logo","alt","connect","rawUrlParams","qs","parse","location","search","ignoreQueryPrefix","useEffect","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1331afbe.chunk.js","sourcesContent":["// @flow\n\nconst GET_URL_PARAMS = \"GET_URL_PARAMS\";\nconst ADD_ROLE = \"ADD_ROLE\";\n\nexport type Action =\n  | { type: typeof GET_URL_PARAMS, payload: Object }\n  | { type: typeof ADD_ROLE, payload: Object };\n\nexport type State = {\n  token: String,\n  user: number,\n  role: String\n};\n\nconst initialState: State = {\n  token: \"\",\n  user: 0,\n  role: \"\"\n};\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action\n): State {\n  switch (action.type) {\n    case GET_URL_PARAMS: {\n      return {\n        ...state,\n        token: action.payload.start,\n        user: action.payload.userID\n      };\n    }\n    case ADD_ROLE: {\n      return {\n        ...state,\n        role: action.payload.role\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getUrlParamsAction = (payload: Object): Action => ({\n  type: GET_URL_PARAMS,\n  payload\n});\n\nexport const addRoleAction = (payload: Object): Action => ({\n  type: ADD_ROLE,\n  payload\n});\n","// @flow\n\nconst START_GAME = \"START_GAME\";\nconst GET_GAME_STATE = \"GET_GAME_STATE\";\n\nexport type Action =\n  | { type: typeof START_GAME }\n  | { type: typeof GET_GAME_STATE };\n\nexport type State = {\n  data: Object\n};\n\nconst initialState: State = {\n  data: {}\n};\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action\n): State {\n  switch (action.type) {\n    case GET_GAME_STATE: {\n      return {\n        ...state,\n        data: action.payload.data\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const startGameAction = (payload: String): Action => ({\n  type: START_GAME,\n  payload\n});\n\nexport const getGameStateAction = (payload: Object): Action => ({\n  type: GET_GAME_STATE,\n  payload\n});\n","import { combineReducers } from \"redux\";\n\nimport app from \"./modules/appState\";\nimport gameState from \"./modules/gameState\";\n\nexport default combineReducers({\n  app,\n  gameState\n});\n","export const useApiParams = () => {\n  const request = async (url, method = \"GET\", body = null, headers = {}) => {\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers[\"Content-Type\"] = \"application/json\";\n      }\n      const response = await fetch(url, { method, body, headers });\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n  const postUserData = async body =>\n    await request(\"/api/session/SessionStart\", \"POST\", body);\n\n  const getGameData = async body =>\n    await request(\"/api/session/GameUpdate\", \"POST\", body);\n\n  return { postUserData, getGameData };\n};\n","import { startGameAction } from \"../gameState\";\nimport { addRoleAction } from \"./index\";\nimport { useApiParams } from \"../../../services/mongoService\";\n\nconst appMiddleware = store => next => action => {\n  switch (action.type) {\n    case \"GET_URL_PARAMS\": {\n      const { start, userID } = action.payload;\n      const { postUserData } = useApiParams();\n\n      postUserData({\n        token: start,\n        user: userID\n      }).then(res => {\n        res && store.dispatch(addRoleAction(res));\n      });\n      store.dispatch(startGameAction(start));\n\n      break;\n    }\n\n    default:\n  }\n\n  next(action);\n};\n\nexport default appMiddleware;\n","import { getGameStateAction } from \"./index\";\nimport { useApiParams } from \"../../../services/mongoService\";\n\nconst gameStateMiddleware = store => next => action => {\n  switch (action.type) {\n    case \"START_GAME\": {\n      const { getGameData } = useApiParams();\n      const token = action.payload;\n      setInterval(() => {\n        getGameData({ token }).then(res => {\n          res && store.dispatch(getGameStateAction(res));\n        });\n      }, 1000);\n      break;\n    }\n    case \"GET_GAME_STATE\": {\n      //const { token } = store.getState().app;\n      //const { getGameData } = useApiParams();\n      //  getGameData({ token }).then(res => console.log(res));\n      break;\n    }\n\n    default:\n  }\n\n  next(action);\n};\n\nexport default gameStateMiddleware;\n","// @flow\n\nimport { applyMiddleware } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport appMiddleware from \"./modules/appState/middleware\";\nimport gameStateMiddleware from \"./modules/gameState/middleware\";\n\nconst middleware = [thunk, appMiddleware, gameStateMiddleware];\n\nexport default applyMiddleware(...middleware);\n","import { createStore, compose } from \"redux\";\n\nimport reducer from \"./reducer\";\nimport middleware from \"./middleware\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(reducer, composeEnhancer(middleware));\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useSelector } from \"react-redux\";\n\nfunction App(props) {\n  const { token, user, role } = useSelector(state => ({\n    token: state.app.token || \"\",\n    user: state.app.user || \"\",\n    role: state.app.role || \"\"\n  }));\n  return (\n    <div className=\"App\">\n      <div className=\"test-data\">\n        <span>{token}</span>\n        <span>{user}</span>\n        <span>{role}</span>\n      </div>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","//flow\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport qs from \"qs\";\nimport { getUrlParamsAction } from \"../redux/modules/appState\";\n\ntype Props = {\n  children: any\n};\nconst LoadingProvider = (props: Props) => {\n  const { dispatch } = props;\n  const rawUrlParams = qs.parse(window.location.search, {\n    ignoreQueryPrefix: true\n  });\n\n  useEffect(() => {\n    dispatch(getUrlParamsAction(rawUrlParams));\n  });\n  return <Fragment>{props.children}</Fragment>;\n};\nexport default connect()(LoadingProvider);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport LoadingProvider from \"./provider/LoadingProvider\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <LoadingProvider>\n        <App />\n      </LoadingProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}